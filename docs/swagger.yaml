basePath: /
definitions:
  controller.response:
    properties:
      error:
        example: Error message
        type: string
      message:
        example: Message
        type: string
    type: object
  domain.CreateUser:
    properties:
      email:
        example: jhon.doel@example.com
        type: string
      first_name:
        example: Jhon
        type: string
      last_name:
        example: Doel
        type: string
      password:
        example: s3cr3t3
        type: string
      username:
        example: jhondoel1995
        type: string
    type: object
  domain.PaginatedTodo:
    properties:
      data:
        items:
          $ref: '#/definitions/domain.Todo'
        type: array
      page:
        type: integer
    type: object
  domain.Todo:
    properties:
      description:
        example: Example description
        type: string
      done:
        type: boolean
      id:
        example: 4b61e0a8-1fe0-4c7f-97bf-f3e9c4e86c3a
        type: string
      name:
        example: Example name
        type: string
    type: object
  domain.Token:
    properties:
      expires_in:
        type: integer
      token:
        example: asdfas-asdfasd-asdf-asdf-asdf
        type: string
    type: object
  domain.User:
    properties:
      email:
        example: user@email.com
        type: string
      enabled:
        type: boolean
      first_name:
        example: John
        type: string
      id:
        type: string
      last_name:
        example: Doel
        type: string
      username:
        example: jhon_doel
        type: string
    type: object
  domain.UserLogin:
    properties:
      password:
        example: s3cr3t3
        type: string
      username:
        example: jhondoel
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Poc para estudos de GO
  title: Todo list
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Gera o token de acesso do usuário
      parameters:
      - description: Informações do acesso
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Token'
        "400":
          description: Parâmetro inválidos
          schema:
            type: string
        "401":
          description: Acesso não authorizado
          schema:
            type: string
      tags:
      - user
  /register:
    post:
      consumes:
      - application/json
      description: Criar novo usuário
      parameters:
      - description: Informações do usuário
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.CreateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.User'
        "400":
          description: Parâmetro inválidos
          schema:
            type: string
      tags:
      - user
  /todo:
    get:
      consumes:
      - application/json
      description: Listagem de todos cadatrados
      parameters:
      - description: Número da página
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.PaginatedTodo'
        "401":
          description: Token inválido
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Lista os todos
      tags:
      - todo
    post:
      consumes:
      - application/json
      description: Criar novo todo
      parameters:
      - description: Payload que será criado
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.Todo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Todo'
        "400":
          description: Request inválido
          schema:
            $ref: '#/definitions/controller.response'
        "401":
          description: Token inválido
          schema:
            $ref: '#/definitions/controller.response'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/controller.response'
      security:
      - ApiKeyAuth: []
      tags:
      - todo
  /todo/{id}:
    delete:
      consumes:
      - application/json
      description: Apaga um todo pelo identificado
      parameters:
      - description: Identificado único do todo
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.response'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/controller.response'
      security:
      - ApiKeyAuth: []
      tags:
      - todo
    put:
      consumes:
      - application/json
      description: Atualizar um todo existente
      parameters:
      - description: Identificador do todo
        in: path
        name: id
        required: true
        type: string
      - description: Payload que será atualizado
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.Todo'
      produces:
      - application/json
      responses:
        "200":
          description: Atualizado com sucesso
          schema:
            $ref: '#/definitions/controller.response'
        "400":
          description: Payload inválido
          schema:
            $ref: '#/definitions/controller.response'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/controller.response'
      security:
      - ApiKeyAuth: []
      tags:
      - todo
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
